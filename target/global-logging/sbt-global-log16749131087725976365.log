[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 15.0.1)
[debug] Load.defaultLoad until apply took 649.6262ms
[debug]           Load.loadUnit: plugins took 132.9647ms
[debug]           Load.loadUnit: defsScala took 0.5192ms
[debug] [Loading] Scanning directory F:\SPARK APP TAKS 2\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\SPARK APP TAKS 2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.7647 ms
[debug]               Load.resolveProject(spark-app-taks-2-build) took 54.692ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-app-taks-2-build, base: F:\SPARK APP TAKS 2\project, plugins: List(<none>))) took 121.8118ms
[debug] [Loading] Done in F:\SPARK APP TAKS 2\project, returning: (spark-app-taks-2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 154.2709ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.379ms
[debug]         Load.loadUnit(file:/F:/SPARK%20APP%20TAKS%202/project/, ...) took 306.4079ms
[debug]       Load.apply: load took 530.9483ms
[debug]       Load.apply: resolveProjects took 8.086ms
[debug]       Load.apply: finalTransforms took 90.2061ms
[debug]       Load.apply: config.delegates took 8.8122ms
[debug]       Load.apply: Def.make(settings)... took 1260.696ms
[debug]       Load.apply: structureIndex took 160.4245ms
[debug]       Load.apply: mkStreams took 4.3841ms
[info] loading project definition from F:\SPARK APP TAKS 2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4028.6351ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory F:\SPARK APP TAKS 2
[debug]       Load.loadUnit: mkEval took 6.2799ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\SPARK APP TAKS 2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6279 ms
[info] loading settings for project spark-app-taks-2 from simple.sbt ...
[debug]         Load.resolveProject(spark-app-taks-2) took 3.3098ms
[debug]       Load.loadTransitive: finalizeProject(Project(id spark-app-taks-2, base: F:\SPARK APP TAKS 2, plugins: List(<none>))) took 6.693ms
[debug] [Loading] Done in F:\SPARK APP TAKS 2, returning: (spark-app-taks-2)
[debug]     Load.loadUnit: loadedProjectsRaw took 181.016ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.6203ms
[debug]   Load.loadUnit(file:/F:/SPARK%20APP%20TAKS%202/, ...) took 4232.5877ms
[debug] Load.apply: load took 4257.1517ms
[debug] Load.apply: resolveProjects took 0.1976ms
[debug] Load.apply: finalTransforms took 10.6417ms
[debug] Load.apply: config.delegates took 0.3714ms
[debug] Load.apply: Def.make(settings)... took 161.7996ms
[debug] Load.apply: structureIndex took 49.4893ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to Simple Project (in build file:/F:/SPARK%20APP%20TAKS%202/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-e1529b78c5ac6ee3ba90
