[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m[0J
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.2 (Ubuntu Java 11.0.9.1)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.defaultLoad until apply took 2.159237ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: plugins took 22.366337ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: defsScala took 0.002652ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /media/bill/USB/SPARK APP TAKS 2/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /media/bill/USB/SPARK APP TAKS 2/project, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 1.637936 ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m                    Load.resolveProject(spark-app-taks-2-build) took 1.035732ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadTransitive: finalizeProject(Project(id spark-app-taks-2-build, base: /media/bill/USB/SPARK APP TAKS 2/project, plugins: List(<none>))) took 3.248633ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /media/bill/USB/SPARK APP TAKS 2/project, returning: (spark-app-taks-2-build)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: loadedProjectsRaw took 4.657332ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: cleanEvalClasses took 0.006828ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m              Load.loadUnit(file:/media/bill/USB/SPARK%20APP%20TAKS%202/project/, ...) took 27.411751ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: load took 28.536008ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: resolveProjects took 0.101733ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: finalTransforms took 8.331797ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: config.delegates took 0.33578ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: Def.make(settings)... took 73.722341ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: structureIndex took 35.61789ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: mkStreams took 0.003229ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /media/bill/USB/SPARK APP TAKS 2/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 3143.775392ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.00337ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /media/bill/USB/SPARK APP TAKS 2[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 0.173703ms[0m[0J
[0m[[0m[31merror[0m] [0m[0mType error in expression[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadFailed, None, None)[0m[0J
[0m[[0m[33mwarn[0m] [0m[0mProject loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)[0m[0J
